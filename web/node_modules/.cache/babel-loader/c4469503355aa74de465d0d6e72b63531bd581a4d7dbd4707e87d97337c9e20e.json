{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Devices.css';// Import CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function Alarm(_ref){let{pageTitle}=_ref;const[mainData,setMainData]=useState(null);const[filteredData,setFilteredData]=useState(null);const[error,setError]=useState(null);const apiBaseUrl='http://192.168.2.12:5000';// Update to your Flask server URL\nuseEffect(()=>{const fetchMainData=async()=>{try{const response=await fetch(\"\".concat(apiBaseUrl,\"/text\"));// Fetch data from the /text endpoint\nif(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const data=await response.json();setMainData(data);// Save the entire data for main data display\n}catch(error){setError('Error fetching main data: '+error.message);}};const fetchAdditionalData=async()=>{try{const response=await fetch(\"\".concat(apiBaseUrl,\"/text\"));// Fetch data from the /text endpoint\nif(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const allData=await response.json();const filteredData=allData.data.filter(item=>item.device==='alarm');// Filter data by device\nsetFilteredData(filteredData);}catch(error){setError('Error fetching additional data: '+error.message);}};fetchMainData();fetchAdditionalData();},[apiBaseUrl]);if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",style:{color:'red'},children:error});}return/*#__PURE__*/_jsxs(\"div\",{className:\"Alarm text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{children:pageTitle}),mainData&&filteredData?/*#__PURE__*/_jsxs(\"div\",{className:\"tables-container\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"table-container1\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"row_0\",children:\"Property\"}),/*#__PURE__*/_jsx(\"th\",{className:\"row_0\",children:\"Value\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(mainData).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:key}),/*#__PURE__*/_jsx(\"td\",{children:value})]},key);})})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"table-container2\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Original Text\"}),/*#__PURE__*/_jsx(\"th\",{children:\"NLP Text\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Device\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Flag\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredData.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[\" \",/*#__PURE__*/_jsx(\"td\",{children:item.original_text}),/*#__PURE__*/_jsx(\"td\",{children:item.nlp_text}),/*#__PURE__*/_jsx(\"td\",{children:item.device}),/*#__PURE__*/_jsx(\"td\",{children:item.flag}),/*#__PURE__*/_jsx(\"td\",{children:item.time})]},index))})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading data...\"})]});}","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Alarm","_ref","pageTitle","mainData","setMainData","filteredData","setFilteredData","error","setError","apiBaseUrl","fetchMainData","response","fetch","concat","ok","Error","status","data","json","message","fetchAdditionalData","allData","filter","item","device","className","style","color","children","Object","entries","map","_ref2","key","value","index","original_text","nlp_text","flag","time"],"sources":["C:/xampp/htdocs/web/src/Alarm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Devices.css'; // Import CSS file\r\n\r\nexport function Alarm({ pageTitle }) {\r\n  const [mainData, setMainData] = useState(null);\r\n  const [filteredData, setFilteredData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiBaseUrl = 'http://192.168.2.12:5000'; // Update to your Flask server URL\r\n\r\n  useEffect(() => {\r\n    const fetchMainData = async () => {\r\n      try {\r\n        const response = await fetch(`${apiBaseUrl}/text`); // Fetch data from the /text endpoint\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setMainData(data); // Save the entire data for main data display\r\n      } catch (error) {\r\n        setError('Error fetching main data: ' + error.message);\r\n      }\r\n    };\r\n\r\n    const fetchAdditionalData = async () => {\r\n      try {\r\n        const response = await fetch(`${apiBaseUrl}/text`); // Fetch data from the /text endpoint\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const allData = await response.json();\r\n        const filteredData = allData.data.filter(item => item.device === 'alarm'); // Filter data by device\r\n        setFilteredData(filteredData);\r\n      } catch (error) {\r\n        setError('Error fetching additional data: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchMainData();\r\n    fetchAdditionalData();\r\n  }, [apiBaseUrl]);\r\n\r\n  if (error) {\r\n    return <p className=\"text-center\" style={{ color: 'red' }}>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Alarm text-center\">\r\n      <h1>{pageTitle}</h1>\r\n      {mainData && filteredData ? (\r\n        <div className=\"tables-container\">\r\n          <table className=\"table-container1\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"row_0\">Property</th>\r\n                <th className=\"row_0\">Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(mainData).map(([key, value]) => (\r\n                <tr key={key}>\r\n                  <td>{key}</td>\r\n                  <td>{value}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table-container2\">\r\n            <thead>\r\n              <tr>\r\n                <th>Original Text</th>\r\n                <th>NLP Text</th>\r\n                <th>Device</th>\r\n                <th>Flag</th>\r\n                <th>Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredData.map((item, index) => (\r\n                <tr key={index}> {/* Ensure the key is a primitive value */}\r\n                  <td>{item.original_text}</td>\r\n                  <td>{item.nlp_text}</td>\r\n                  <td>{item.device}</td>\r\n                  <td>{item.flag}</td>\r\n                  <td>{item.time}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p>Loading data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}