{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import'./main_page.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Home(){const[jsonData,setJsonData]=useState(null);const[lastModified,setLastModified]=useState(null);useEffect(()=>{const fetchData=async()=>{try{const response=await fetch('/text');console.log('Response Status:',response.status);console.log('Response Headers:',response.headers);if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}// Attempt to read response text\nconst textResponse=await response.text();console.log('Response Text:',textResponse);// Parse response as JSON\nconst newData=JSON.parse(textResponse);const newLastModified=response.headers.get('Last-Modified');if(newLastModified!==lastModified){setJsonData(newData);setLastModified(newLastModified);}}catch(error){console.error('Error fetching data:',error);}};fetchData();const intervalId=setInterval(fetchData,2000);return()=>clearInterval(intervalId);},[lastModified]);const getNLPText=()=>{if(jsonData&&jsonData.data&&jsonData.data.length>0){return jsonData.data[jsonData.data.length-1].nlp_text;}return'';};const getTextColor=()=>{if(jsonData&&jsonData.data&&jsonData.data.length>0){const flag=jsonData.data[jsonData.data.length-1].flag;if(flag==='correct'){return'green';}else if(flag==='incorrect'){return'red';}}return'';};const renderTable=()=>{if(jsonData&&jsonData.data&&jsonData.data.length>0){return/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"row_0\",children:[/*#__PURE__*/_jsx(\"th\",{children:\"Command\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Valid/No Valid\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Device\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:jsonData.data.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.nlp_text}),/*#__PURE__*/_jsx(\"td\",{children:item.flag}),/*#__PURE__*/_jsx(\"td\",{children:item.device}),/*#__PURE__*/_jsx(\"td\",{children:item.time})]},index))})]});}else{return/*#__PURE__*/_jsx(\"p\",{children:\"No data available.\"});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Starting Page\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"line-under-header\"})]}),jsonData?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'black'},children:/*#__PURE__*/_jsx(\"h4\",{children:\"Last command that got triggered:\"})}),/*#__PURE__*/_jsx(\"span\",{style:{color:getTextColor()},children:getNLPText()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-center\",children:[/*#__PURE__*/_jsx(Link,{to:\"/aircondition\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Air Condition\"})})}),/*#__PURE__*/_jsx(Link,{to:\"/alarm\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Alarm\"})})})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'50px'},children:renderTable()})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Loading...\"})]});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","jsonData","setJsonData","lastModified","setLastModified","fetchData","response","fetch","console","log","status","headers","ok","Error","concat","textResponse","text","newData","JSON","parse","newLastModified","get","error","intervalId","setInterval","clearInterval","getNLPText","data","length","nlp_text","getTextColor","flag","renderTable","children","className","map","item","index","device","time","style","color","to","marginTop"],"sources":["C:/xampp/htdocs/web/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './main_page.css';\r\n\r\nfunction Home() {\r\n  const [jsonData, setJsonData] = useState(null);\r\n  const [lastModified, setLastModified] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('/text');\r\n        console.log('Response Status:', response.status);\r\n        console.log('Response Headers:', response.headers);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        // Attempt to read response text\r\n        const textResponse = await response.text();\r\n        console.log('Response Text:', textResponse);\r\n\r\n        // Parse response as JSON\r\n        const newData = JSON.parse(textResponse);\r\n\r\n        const newLastModified = response.headers.get('Last-Modified');\r\n        if (newLastModified !== lastModified) {\r\n          setJsonData(newData);\r\n          setLastModified(newLastModified);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 2000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [lastModified]);\r\n\r\n  const getNLPText = () => {\r\n    if (jsonData && jsonData.data && jsonData.data.length > 0) {\r\n      return jsonData.data[jsonData.data.length - 1].nlp_text;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const getTextColor = () => {\r\n    if (jsonData && jsonData.data && jsonData.data.length > 0) {\r\n      const flag = jsonData.data[jsonData.data.length - 1].flag;\r\n      if (flag === 'correct') {\r\n        return 'green';\r\n      } else if (flag === 'incorrect') {\r\n        return 'red';\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (jsonData && jsonData.data && jsonData.data.length > 0) {\r\n      return (\r\n        <table>\r\n          <thead>\r\n            <tr className=\"row_0\">\r\n              <th>Command</th>\r\n              <th>Valid/No Valid</th>\r\n              <th>Device</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {jsonData.data.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.nlp_text}</td>\r\n                <td>{item.flag}</td>\r\n                <td>{item.device}</td>\r\n                <td>{item.time}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    } else {\r\n      return <p>No data available.</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h2>Starting Page</h2>\r\n        <hr className=\"line-under-header\"></hr>\r\n      </div>\r\n      {jsonData ? (\r\n        <>\r\n          <p className=\"text-center\">\r\n            <span style={{ color: 'black' }}><h4>Last command that got triggered:</h4></span>\r\n            <span style={{ color: getTextColor() }}>{getNLPText()}</span>\r\n          </p>\r\n          <div className=\"button-center\">\r\n            <Link to=\"/aircondition\">\r\n              <button className=\"button\">\r\n                <span>Air Condition</span>\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/alarm\">\r\n              <button className=\"button\">\r\n                <span>Alarm</span>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div style={{ marginTop: '50px' }}>\r\n            {renderTable()}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p className=\"text-center\">Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}