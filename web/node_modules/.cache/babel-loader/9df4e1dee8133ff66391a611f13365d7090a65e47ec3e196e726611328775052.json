{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./air_condition.css';// Import the updated CSS file\nimport HeatIcon from'./hot.png';import SnowflakeIcon from'./snowflake.png';import AutoIcon from'./letter-a.png';import ClockIcon from'./clock.png';import ThermometerIcon from'./thermometer.png';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function AirCondition(_ref){let{pageTitle}=_ref;const[mainData,setMainData]=useState(null);const[filteredData,setFilteredData]=useState([]);// For the table data\nconst[error,setError]=useState(null);const apiBaseUrl='http://192.168.1.7:5000';// Update to your Flask server URL\nuseEffect(()=>{const eventSource=new EventSource(\"\".concat(apiBaseUrl,\"/stream_air_condition\"));eventSource.onmessage=event=>{const data=JSON.parse(event.data);setMainData(data);// Update the state when new data is received\n// Assuming the detailed data is under 'history' or a similar key:\nsetFilteredData(data.history||[]);// Set table data from the history or similar field\n};eventSource.onerror=error=>{console.error('EventSource failed:',error);setError('Error receiving updates');eventSource.close();};return()=>{eventSource.close();// Clean up when the component unmounts\n};},[apiBaseUrl]);const renderAirConditionCard=(property,value)=>{let statusClass='';let icon=null;if(property==='On/Off'){statusClass=value.toLowerCase()==='on'?'on':'off';}if(property==='Mode'&&value==='heat'){icon=HeatIcon;}else if(property==='Mode'&&value==='cold'){icon=SnowflakeIcon;}else if(property==='Mode'&&value==='auto'){icon=AutoIcon;}else if(property==='Timer'){icon=ClockIcon;}else if(property==='Temperature'){icon=ThermometerIcon;}return/*#__PURE__*/_jsx(\"div\",{className:\"air-condition-card \".concat(statusClass),children:/*#__PURE__*/_jsxs(\"div\",{className:\"air-condition-card-content\",children:[statusClass&&/*#__PURE__*/_jsx(\"div\",{className:\"air-condition-status-circle \".concat(statusClass)}),icon&&/*#__PURE__*/_jsx(\"img\",{src:icon,alt:\"\".concat(property,\" Icon\"),className:\"air-condition-icon\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"air-condition-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"air-condition-property\",children:property}),/*#__PURE__*/_jsx(\"div\",{className:\"air-condition-value\",children:property==='Temperature'?\"\".concat(value,\"\\xB0C\"):value})]})]})},property);};if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",style:{color:'red'},children:error});}return/*#__PURE__*/_jsxs(\"div\",{className:\"air-condition-page-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:pageTitle}),/*#__PURE__*/_jsx(\"hr\",{className:\"line-under-header\"})]}),mainData?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"air-condition-cards-container\",children:[renderAirConditionCard('On/Off',mainData.on_off||'N/A'),renderAirConditionCard('Temperature',mainData.temperature||'N/A'),renderAirConditionCard('Timer',mainData.timer||'N/A'),renderAirConditionCard('Mode',mainData.mode||'N/A')]}),filteredData.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"tables-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"table-container-wrapper\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Air Condition Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table-container2\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"row_0\",children:[/*#__PURE__*/_jsx(\"th\",{children:\"Original Text\"}),/*#__PURE__*/_jsx(\"th\",{children:\"NLP Text\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Device\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Flag\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredData.slice().reverse().map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.original_text}),/*#__PURE__*/_jsx(\"td\",{children:item.nlp_text}),/*#__PURE__*/_jsx(\"td\",{children:item.device}),/*#__PURE__*/_jsx(\"td\",{children:item.flag}),/*#__PURE__*/_jsx(\"td\",{children:item.time})]},index))})]})})]})})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading data...\"})]});}export default AirCondition;","map":{"version":3,"names":["React","useState","useEffect","HeatIcon","SnowflakeIcon","AutoIcon","ClockIcon","ThermometerIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AirCondition","_ref","pageTitle","mainData","setMainData","filteredData","setFilteredData","error","setError","apiBaseUrl","eventSource","EventSource","concat","onmessage","event","data","JSON","parse","history","onerror","console","close","renderAirConditionCard","property","value","statusClass","icon","toLowerCase","className","children","src","alt","style","color","on_off","temperature","timer","mode","length","slice","reverse","map","item","index","original_text","nlp_text","device","flag","time"],"sources":["C:/xampp/htdocs/web/src/AirCondition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './air_condition.css'; // Import the updated CSS file\r\nimport HeatIcon from './hot.png'; \r\nimport SnowflakeIcon from './snowflake.png'; \r\nimport AutoIcon from './letter-a.png'; \r\nimport ClockIcon from './clock.png'; \r\nimport ThermometerIcon from './thermometer.png';\r\n\r\nexport function AirCondition({ pageTitle }) {\r\n  const [mainData, setMainData] = useState(null);\r\n  const [filteredData, setFilteredData] = useState([]); // For the table data\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiBaseUrl = 'http://192.168.1.7:5000'; // Update to your Flask server URL\r\n\r\n  useEffect(() => {\r\n    const eventSource = new EventSource(`${apiBaseUrl}/stream_air_condition`);\r\n\r\n    eventSource.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      setMainData(data); // Update the state when new data is received\r\n\r\n      // Assuming the detailed data is under 'history' or a similar key:\r\n      setFilteredData(data.history || []); // Set table data from the history or similar field\r\n    };\r\n\r\n    eventSource.onerror = (error) => {\r\n      console.error('EventSource failed:', error);\r\n      setError('Error receiving updates');\r\n      eventSource.close();\r\n    };\r\n\r\n    return () => {\r\n      eventSource.close(); // Clean up when the component unmounts\r\n    };\r\n  }, [apiBaseUrl]);\r\n\r\n  const renderAirConditionCard = (property, value) => {\r\n    let statusClass = '';\r\n    let icon = null;\r\n\r\n    if (property === 'On/Off') {\r\n      statusClass = value.toLowerCase() === 'on' ? 'on' : 'off';\r\n    }\r\n\r\n    if (property === 'Mode' && value === 'heat') {\r\n      icon = HeatIcon;\r\n    } else if (property === 'Mode' && value === 'cold') {\r\n      icon = SnowflakeIcon;\r\n    } else if (property === 'Mode' && value === 'auto') {\r\n      icon = AutoIcon;\r\n    } else if (property === 'Timer') {\r\n      icon = ClockIcon;\r\n    } else if (property === 'Temperature') {\r\n      icon = ThermometerIcon;\r\n    }\r\n\r\n    return (\r\n      <div className={`air-condition-card ${statusClass}`} key={property}>\r\n        <div className=\"air-condition-card-content\">\r\n          {statusClass && <div className={`air-condition-status-circle ${statusClass}`}></div>}\r\n          {icon && <img src={icon} alt={`${property} Icon`} className=\"air-condition-icon\" />}\r\n          <div className=\"air-condition-info\">\r\n            <div className=\"air-condition-property\">{property}</div>\r\n            <div className=\"air-condition-value\">\r\n              {property === 'Temperature' ? `${value}Â°C` : value}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (error) {\r\n    return <p className=\"text-center\" style={{ color: 'red' }}>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"air-condition-page-container\">\r\n      <div className=\"header\">\r\n        <h1>{pageTitle}</h1>\r\n        <hr className=\"line-under-header\" />\r\n      </div>\r\n\r\n      {mainData ? (\r\n        <>\r\n          {/* Render Air Condition Cards */}\r\n          <div className=\"air-condition-cards-container\">\r\n            {renderAirConditionCard('On/Off', mainData.on_off || 'N/A')}\r\n            {renderAirConditionCard('Temperature', mainData.temperature || 'N/A')}\r\n            {renderAirConditionCard('Timer', mainData.timer || 'N/A')}\r\n            {renderAirConditionCard('Mode', mainData.mode || 'N/A')}\r\n          </div>\r\n\r\n          {/* Render Table with detailed information */}\r\n          {filteredData.length > 0 && (\r\n            <div className=\"tables-container\">\r\n              <div className=\"table-container-wrapper\">\r\n                <h2>Air Condition Information</h2>\r\n                <div className=\"table-container\">\r\n                  <table className=\"table-container2\">\r\n                    <thead>\r\n                      <tr className=\"row_0\">\r\n                        <th>Original Text</th>\r\n                        <th>NLP Text</th>\r\n                        <th>Device</th>\r\n                        <th>Flag</th>\r\n                        <th>Time</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredData.slice().reverse().map((item, index) => (\r\n                        <tr key={index}>\r\n                          <td>{item.original_text}</td>\r\n                          <td>{item.nlp_text}</td>\r\n                          <td>{item.device}</td>\r\n                          <td>{item.flag}</td>\r\n                          <td>{item.time}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>Loading data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AirCondition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}